// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String    @unique
  password  String
  name      String?
  avatar    String? // URL del avatar del usuario
  bio       String? // Breve descripción del usuario
  verified  Boolean   @default(false)
  tweets    Tweet[] // Relación uno a muchos con Tweets
  likes     Like[] // Relación uno a muchos con Likes
  retweets  Retweet[] // Relación uno a muchos con Retweets
  createdAt DateTime  @default(now())
}

model Tweet {
  id        String    @id @default(uuid())
  content   String    @db.Text // El contenido del tweet
  user      User      @relation(fields: [userId], references: [id]) // Relación con el usuario
  userId    String
  likes     Like[] // Relación uno a muchos con Likes
  retweets  Retweet[] // Relación uno a muchos con Retweets
  createdAt DateTime  @default(now())
}

model Like {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   String
  createdAt DateTime @default(now())
}

model Retweet {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   String
  createdAt DateTime @default(now())
}
